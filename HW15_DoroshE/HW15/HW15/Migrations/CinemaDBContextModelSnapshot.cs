// <auto-generated />
using System;
using HW15.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW15.Migrations
{
    [DbContext(typeof(CinemaDBContext))]
    partial class CinemaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HW15.Data.Entities.CinemaHalls", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CinemaHalls");
                });

            modelBuilder.Entity("HW15.Data.Entities.Hall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemaGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CinemaGuid");

                    b.ToTable("Halls");
                });

            modelBuilder.Entity("HW15.Data.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("HW15.Data.Entities.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HallGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("SeatPriceCoef")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HallGuid");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("HW15.Data.Entities.Showtime", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HallGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HallGuid");

                    b.HasIndex("MovieGuid");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("HW15.Data.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SeatGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShowtimeGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SeatGuid");

                    b.HasIndex("ShowtimeGuid");

                    b.HasIndex("UserGuid");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("HW15.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HW15.Data.Entities.Hall", b =>
                {
                    b.HasOne("HW15.Data.Entities.CinemaHalls", "CinemaHall")
                        .WithMany("Halls")
                        .HasForeignKey("CinemaGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CinemaHall");
                });

            modelBuilder.Entity("HW15.Data.Entities.Seat", b =>
                {
                    b.HasOne("HW15.Data.Entities.Hall", "Hall")
                        .WithMany("Seats")
                        .HasForeignKey("HallGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");
                });

            modelBuilder.Entity("HW15.Data.Entities.Showtime", b =>
                {
                    b.HasOne("HW15.Data.Entities.Hall", "Hall")
                        .WithMany("Showtimes")
                        .HasForeignKey("HallGuid")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HW15.Data.Entities.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("HW15.Data.Entities.Ticket", b =>
                {
                    b.HasOne("HW15.Data.Entities.Seat", "Seat")
                        .WithMany("Tickets")
                        .HasForeignKey("SeatGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW15.Data.Entities.Showtime", "Showtime")
                        .WithMany("Tickets")
                        .HasForeignKey("ShowtimeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW15.Data.Entities.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seat");

                    b.Navigation("Showtime");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HW15.Data.Entities.CinemaHalls", b =>
                {
                    b.Navigation("Halls");
                });

            modelBuilder.Entity("HW15.Data.Entities.Hall", b =>
                {
                    b.Navigation("Seats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("HW15.Data.Entities.Movie", b =>
                {
                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("HW15.Data.Entities.Seat", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("HW15.Data.Entities.Showtime", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("HW15.Data.Entities.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
